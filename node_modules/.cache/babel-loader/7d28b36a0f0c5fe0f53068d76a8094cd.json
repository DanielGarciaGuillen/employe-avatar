{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Daniel\\\\Webs\\\\threehouse\\\\src\\\\Components\\\\DownloadSignature.jsx\";\nimport React from \"react\";\nimport html2canvas from \"html2canvas\";\nimport jsPDF from \"jspdf\";\n\nconst pxToMm = px => {\n  return Math.floor(px / document.getElementById(\"myMm\").offsetHeight);\n};\n\nconst mmToPx = mm => {\n  return document.getElementById(\"myMm\").offsetHeight * mm;\n};\n\nconst range = (start, end) => {\n  return Array(end - start).join(0).split(0).map(function (val, id) {\n    return id + start;\n  });\n};\n\nconst PrintButton = ({\n  id,\n  label\n}) => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28\n  },\n  __self: this\n}), React.createElement(\"div\", {\n  onClick: () => {\n    const input = document.getElementById(id);\n    const inputHeightMm = pxToMm(input.offsetHeight);\n    const a4WidthMm = 210;\n    const a4HeightMm = 297;\n    const a4HeightPx = mmToPx(a4HeightMm);\n    const numPages = inputHeightMm <= a4HeightMm ? 1 : Math.floor(inputHeightMm / a4HeightMm) + 1;\n    console.log({\n      input,\n      inputHeightMm,\n      a4HeightMm,\n      a4HeightPx,\n      numPages,\n      range: range(0, numPages),\n      comp: inputHeightMm <= a4HeightMm,\n      inputHeightPx: input.offsetHeight\n    });\n    html2canvas(input).then(canvas => {\n      const imgData = canvas.toDataURL(\"image/png\"); // Document of a4WidthMm wide and inputHeightMm high\n\n      if (inputHeightMm > a4HeightMm) {\n        // elongated a4 (system print dialog will handle page breaks)\n        const pdf = new jsPDF(\"p\", \"mm\", [inputHeightMm + 16, a4WidthMm]);\n      } else {\n        // standard a4\n        const pdf = new jsPDF();\n      }\n      /* \n      pdf.addImage(imgData, \"PNG\", 0, 0);\n      pdf.save(`${id}.pdf`); */\n\n    });\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30\n  },\n  __self: this\n}, label));\n\nexport default PrintButton;","map":{"version":3,"sources":["C:\\Users\\Daniel\\Webs\\threehouse\\src\\Components\\DownloadSignature.jsx"],"names":["React","html2canvas","jsPDF","pxToMm","px","Math","floor","document","getElementById","offsetHeight","mmToPx","mm","range","start","end","Array","join","split","map","val","id","PrintButton","label","input","inputHeightMm","a4WidthMm","a4HeightMm","a4HeightPx","numPages","console","log","comp","inputHeightPx","then","canvas","imgData","toDataURL","pdf"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,MAAM,GAAGC,EAAE,IAAI;AACnB,SAAOC,IAAI,CAACC,KAAL,CAAWF,EAAE,GAAGG,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgCC,YAAhD,CAAP;AACD,CAFD;;AAIA,MAAMC,MAAM,GAAGC,EAAE,IAAI;AACnB,SAAOJ,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgCC,YAAhC,GAA+CE,EAAtD;AACD,CAFD;;AAIA,MAAMC,KAAK,GAAG,CAACC,KAAD,EAAQC,GAAR,KAAgB;AAC5B,SAAOC,KAAK,CAACD,GAAG,GAAGD,KAAP,CAAL,CACJG,IADI,CACC,CADD,EAEJC,KAFI,CAEE,CAFF,EAGJC,GAHI,CAGA,UAASC,GAAT,EAAcC,EAAd,EAAkB;AACrB,WAAOA,EAAE,GAAGP,KAAZ;AACD,GALI,CAAP;AAMD,CAPD;;AASA,MAAMQ,WAAW,GAAG,CAAC;AAAED,EAAAA,EAAF;AAAME,EAAAA;AAAN,CAAD,KAClB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EALF,EAOE;AACE,EAAA,OAAO,EAAE,MAAM;AACb,UAAMC,KAAK,GAAGhB,QAAQ,CAACC,cAAT,CAAwBY,EAAxB,CAAd;AACA,UAAMI,aAAa,GAAGrB,MAAM,CAACoB,KAAK,CAACd,YAAP,CAA5B;AACA,UAAMgB,SAAS,GAAG,GAAlB;AACA,UAAMC,UAAU,GAAG,GAAnB;AACA,UAAMC,UAAU,GAAGjB,MAAM,CAACgB,UAAD,CAAzB;AACA,UAAME,QAAQ,GACZJ,aAAa,IAAIE,UAAjB,GACI,CADJ,GAEIrB,IAAI,CAACC,KAAL,CAAWkB,aAAa,GAAGE,UAA3B,IAAyC,CAH/C;AAIAG,IAAAA,OAAO,CAACC,GAAR,CAAY;AACVP,MAAAA,KADU;AAEVC,MAAAA,aAFU;AAGVE,MAAAA,UAHU;AAIVC,MAAAA,UAJU;AAKVC,MAAAA,QALU;AAMVhB,MAAAA,KAAK,EAAEA,KAAK,CAAC,CAAD,EAAIgB,QAAJ,CANF;AAOVG,MAAAA,IAAI,EAAEP,aAAa,IAAIE,UAPb;AAQVM,MAAAA,aAAa,EAAET,KAAK,CAACd;AARX,KAAZ;AAWAR,IAAAA,WAAW,CAACsB,KAAD,CAAX,CAAmBU,IAAnB,CAAwBC,MAAM,IAAI;AAChC,YAAMC,OAAO,GAAGD,MAAM,CAACE,SAAP,CAAiB,WAAjB,CAAhB,CADgC,CAGhC;;AACA,UAAIZ,aAAa,GAAGE,UAApB,EAAgC;AAC9B;AACA,cAAMW,GAAG,GAAG,IAAInC,KAAJ,CAAU,GAAV,EAAe,IAAf,EAAqB,CAACsB,aAAa,GAAG,EAAjB,EAAqBC,SAArB,CAArB,CAAZ;AACD,OAHD,MAGO;AACL;AACA,cAAMY,GAAG,GAAG,IAAInC,KAAJ,EAAZ;AACD;AACD;;;;AAGD,KAdD;AAeD,GArCH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAuCGoB,KAvCH,CAPF,CADF;;AAoDA,eAAeD,WAAf","sourcesContent":["import React from \"react\";\nimport html2canvas from \"html2canvas\";\nimport jsPDF from \"jspdf\";\n\nconst pxToMm = px => {\n  return Math.floor(px / document.getElementById(\"myMm\").offsetHeight);\n};\n\nconst mmToPx = mm => {\n  return document.getElementById(\"myMm\").offsetHeight * mm;\n};\n\nconst range = (start, end) => {\n  return Array(end - start)\n    .join(0)\n    .split(0)\n    .map(function(val, id) {\n      return id + start;\n    });\n};\n\nconst PrintButton = ({ id, label }) => (\n  <div>\n    {/*\n    Getting pixel height in milimeters:\n    https://stackoverflow.com/questions/7650413/pixel-to-mm-equation/27111621#27111621\n  */}\n    <div />\n\n    <div\n      onClick={() => {\n        const input = document.getElementById(id);\n        const inputHeightMm = pxToMm(input.offsetHeight);\n        const a4WidthMm = 210;\n        const a4HeightMm = 297;\n        const a4HeightPx = mmToPx(a4HeightMm);\n        const numPages =\n          inputHeightMm <= a4HeightMm\n            ? 1\n            : Math.floor(inputHeightMm / a4HeightMm) + 1;\n        console.log({\n          input,\n          inputHeightMm,\n          a4HeightMm,\n          a4HeightPx,\n          numPages,\n          range: range(0, numPages),\n          comp: inputHeightMm <= a4HeightMm,\n          inputHeightPx: input.offsetHeight\n        });\n\n        html2canvas(input).then(canvas => {\n          const imgData = canvas.toDataURL(\"image/png\");\n\n          // Document of a4WidthMm wide and inputHeightMm high\n          if (inputHeightMm > a4HeightMm) {\n            // elongated a4 (system print dialog will handle page breaks)\n            const pdf = new jsPDF(\"p\", \"mm\", [inputHeightMm + 16, a4WidthMm]);\n          } else {\n            // standard a4\n            const pdf = new jsPDF();\n          }\n          /* \n          pdf.addImage(imgData, \"PNG\", 0, 0);\n          pdf.save(`${id}.pdf`); */\n        });\n      }}\n    >\n      {label}\n    </div>\n  </div>\n);\n\nexport default PrintButton;\n"]},"metadata":{},"sourceType":"module"}